<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.ocp</groupId>
		<artifactId>CCL-MIDDLEWARE</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>elasticsearch-2.4.1</artifactId>
	<packaging>jar</packaging>

	<name>data-cache</name>
	<url>http://maven.apache.org</url>
	<properties>
		<testframework.version>2.3.2</testframework.version>
		<lucene.version>5.5.2</lucene.version>
		<securesm.version>1.0</securesm.version>
		<jackson.version>2.8.1</jackson.version>
		<snakeyaml.version>1.15</snakeyaml.version>
		<slf4j.version>1.6.2</slf4j.version>
		<log4j.version>1.2.17</log4j.version>

		<lucene.maven.version>${lucene.version}</lucene.maven.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>com.carrotsearch.randomizedtesting</groupId>
			<artifactId>randomizedtesting-runner</artifactId>
			<scope>test</scope>
			<version>${testframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-test-framework</artifactId>
			<scope>test</scope>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
			<version>4.3.6</version>
		</dependency>
		<dependency>
			<groupId>com.google.jimfs</groupId>
			<artifactId>jimfs</artifactId>
			<scope>test</scope>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-backward-codecs</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-memory</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-highlighter</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-suggest</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-join</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-spatial</artifactId>
			<version>${lucene.maven.version}</version>
		</dependency>
		<dependency>
			<groupId>com.spatial4j</groupId>
			<artifactId>spatial4j</artifactId>
			<optional>true</optional>
			<version>0.5</version>
		</dependency>
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>jts</artifactId>
			<optional>true</optional>
			<version>1.13</version>
		</dependency>
		<!-- needed for templating -->
		<dependency>
			<groupId>com.github.spullara.mustache.java</groupId>
			<artifactId>compiler</artifactId>
			<optional>true</optional>
			<version>0.8.13</version>
		</dependency>
		<!-- Lucene spatial -->

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>securesm</artifactId>
			<version>${securesm.version}</version>
		</dependency>
		<dependency>
			<groupId>com.carrotsearch</groupId>
			<artifactId>hppc</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.5</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-cbor</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snakeyaml.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.10.6.Final</version>
		</dependency>
		<dependency>
			<groupId>com.ning</groupId>
			<artifactId>compress-lzf</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.tdunning</groupId>
			<artifactId>t-digest</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.hdrhistogram</groupId>
			<artifactId>HdrHistogram</artifactId>
			<version>2.1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<optional>true</optional>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>apache-log4j-extras</artifactId>
			<optional>true</optional>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<optional>true</optional>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<optional>true</optional>
			<version>4.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>securemock</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>

		<!-- remove this for java 8 -->
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>jsr166e</artifactId>
			<version>1.1.0</version>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>es-build.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</testResource>
			<testResource>
				<directory>${elasticsearch.tools.directory}/rest-api-spec</directory>
				<targetPath>rest-api-spec</targetPath>
				<includes>
					<include>api/*.json</include>
					<include>test/**/*.yaml</include>
				</includes>
			</testResource>
			<!-- shared test resources like log4j.properties -->
			<testResource>
				<directory>${elasticsearch.tools.directory}/shared-test-resources</directory>
				<filtering>false</filtering>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-test-sources</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<includes>
								<include>org/elasticsearch/test/**/*</include>
								<include>org/elasticsearch/bootstrap/BootstrapForTesting.class</include>
								<include>org/elasticsearch/bootstrap/BootstrapForTesting$*.class</include>
								<include>org/elasticsearch/common/cli/CliToolTestCase.class</include>
								<include>org/elasticsearch/common/cli/CliToolTestCase$*.class</include>
							</includes>
							<excludes>
								<!-- unit tests for yaml suite parser & rest spec parser need to 
									be excluded -->
								<exclude>org/elasticsearch/test/rest/test/**/*</exclude>
								<!-- unit tests for test framework classes -->
								<exclude>org/elasticsearch/test/test/**/*</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<includes>
								<include>rest-api-spec/**/*</include>
								<include>org/elasticsearch/test/**/*</include>
								<include>org/elasticsearch/action/admin/indices/upgrade/UpgradeAssertions.class</include>
								<include>org/elasticsearch/bootstrap/BootstrapForTesting.class</include>
								<include>org/elasticsearch/bootstrap/BootstrapForTesting$*.class</include>
								<include>org/elasticsearch/common/cli/CliToolTestCase.class</include>
								<include>org/elasticsearch/common/cli/CliToolTestCase$*.class</include>
								<include>org/elasticsearch/cluster/MockInternalClusterInfoService.class</include>
								<include>org/elasticsearch/cluster/MockInternalClusterInfoService$*.class</include>
								<include>org/elasticsearch/cluster/routing/TestShardRouting.class</include>
								<include>org/elasticsearch/cluster/routing/TestShardRouting$*.class</include>
								<include>org/elasticsearch/index/shard/MockEngineFactoryPlugin.class</include>
								<!-- Shared between core and backwards compatibility tests. -->
								<include>org/elasticsearch/gateway/ReusePeerRecoverySharedTest.class</include>
								<include>org/elasticsearch/search/MockSearchService.class</include>
								<include>org/elasticsearch/search/MockSearchService$*.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/AbstractTermsTestCase.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams$*.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams$*.class</include>
								<include>org/elasticsearch/search/aggregations/bucket/script/TestScript.class</include>
								<include>org/elasticsearch/search/aggregations/metrics/AbstractNumericTestCase.class</include>
								<include>org/elasticsearch/snapshots/SnapshotSharedTest.class</include>
								<include>org/elasticsearch/snapshots/SnapshotSharedTest$*.class</include>
								<include>org/elasticsearch/percolator/PercolatorTestUtil.class</include>
								<include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>
								<include>org/elasticsearch/cache/recycler/MockPageCacheRecycler$*.class</include>
								<include>org/elasticsearch/common/util/MockBigArrays.class</include>
								<include>org/elasticsearch/common/util/MockBigArrays$*.class</include>
								<include>org/elasticsearch/node/NodeMocksPlugin.class</include>
								<include>org/elasticsearch/node/MockNode.class</include>
								<include>org/elasticsearch/common/io/PathUtilsForTesting.class</include>
								<include>org/elasticsearch/rest/NoOpClient.class</include>
							</includes>
							<excludes>
								<!-- unit tests for yaml suite parser & rest spec parser need to 
									be excluded -->
								<exclude>org/elasticsearch/test/rest/test/**/*</exclude>
								<!-- unit tests for test framework classes -->
								<exclude>org/elasticsearch/test/test/**/*</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<!-- Don't run the license checker in core -->
						<id>check-license</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>set-doclint-all</id>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- if we are on java 1.8.* we set doclint to run all checks -->
								<condition property="doclint.all" value="-Xdoclint:all"
									else="">
									<matches pattern="1\.8\..+$" string="${java.runtime.version}" />
								</condition>
							</target>
							<exportAntProperties>true</exportAntProperties>
						</configuration>
					</execution>
					<execution>
						<id>set-doclint-missing</id>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- if we are on java 1.8.* we set doclint to ignore missing -->
								<condition property="doclint.missing" value="-Xdoclint:-missing"
									else="">
									<matches pattern="1\.8\..+$" string="${java.runtime.version}" />
								</condition>
							</target>
							<exportAntProperties>true</exportAntProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>org/apache/lucene/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<!-- Guice -->
							<exclude>src/main/java/org/elasticsearch/common/inject/**</exclude>
							<!-- Forks of Lucene classes -->
							<exclude>src/main/java/org/apache/lucene/**/X*.java</exclude>
							<!-- netty pipelining -->
							<exclude>src/main/java/org/elasticsearch/http/netty/pipelining/**</exclude>
							<!-- Joda -->
							<exclude>src/main/java/org/joda/time/base/BaseDateTime.java</exclude>
							<exclude>src/main/java/org/joda/time/format/StrictISODateTimeFormat.java</exclude>
						</excludes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<!-- license profile, to generate third party license file -->
		<profile>
			<id>license</id>
			<activation>
				<property>
					<name>license.generation</name>
					<value>true</value>
				</property>
			</activation>
			<!-- not including license-maven-plugin is sufficent to expose default 
				license -->
		</profile>
	</profiles>
</project>
